<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://www.richt.co.uk/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 29 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.richt.co.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>Flappy Phoenix - Flappy Bird clone using Phoenix LiveView</title><link>https://www.richt.co.uk/til/flappy-phoenix-live-view/</link><pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/til/flappy-phoenix-live-view/</guid><description>I wanted to try out the new early release of Phoenix LiveView which allows you to perform real-time rendering updates from the server without writing any JavaScript.
Although real-time games aren&amp;rsquo;t really the goal of the project, it is so performant you can get pretty good results, so why not.
The result is Flappy Phoenix.
The source code is available on GitHub.</description></item><item><title>TIL Test a branch using dep with golang</title><link>https://www.richt.co.uk/til/test-golang-branch-using-dep/</link><pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/til/test-golang-branch-using-dep/</guid><description>I just needed to test out a branch fix for a go package and discovered it&amp;rsquo;s pretty easy to do if you&amp;rsquo;re using dep for dependency management by specifying a new source for the package.</description></item><item><title>Building a BBC Sounds status bar app for macOS</title><link>https://www.richt.co.uk/articles/building-bbc-sounds-app-for-macos/</link><pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/articles/building-bbc-sounds-app-for-macos/</guid><description>&lt;p&gt;The documentation of what I discovered while building a WebKit view status bar
app for macOS with native media key support controlling the playback in the WebView.
The final code is available on &lt;a href=&#34;https://github.com/moomerman/Sounds&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>TIL Determine which HTTP port is being used by a Phoenix app</title><link>https://www.richt.co.uk/til/determine-port-used-in-phoenix/</link><pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/til/determine-port-used-in-phoenix/</guid><description>I was recently starting a Phoenix server with port 0 which tells the OS to find a free local port but wanted to know what port it had chosen.
It turns out you can query the ranch config by the module name of your Phoenix Endpoint to get this information:</description></item><item><title>TIL Tweet URLs at the end</title><link>https://www.richt.co.uk/til/tweet-url-at-the-end/</link><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/til/tweet-url-at-the-end/</guid><description>I&amp;rsquo;m probably very late to the party but I discovered today that if you&amp;rsquo;re tweeting a link, twitter will display it differently if you put it at the end rather than the beginning or middle of the tweet.
Here&amp;rsquo;s an example where I posted it at the beginning
And here&amp;rsquo;s one at the end</description></item><item><title>TIL Docker can override UFW rules</title><link>https://www.richt.co.uk/til/docker-can-override-ufw-rules/</link><pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/til/docker-can-override-ufw-rules/</guid><description>&lt;p&gt;If you&amp;rsquo;re using Ubuntu&amp;rsquo;s Uncomplicated Firewall (UFW) on your host and running
services with Docker mapped ports, these services can bypass your UFW configuration.&lt;/p&gt;</description></item><item><title>Asset Catalogs With RubyMotion</title><link>https://www.richt.co.uk/articles/asset-catalogs-with-rubymotion/</link><pubDate>Thu, 06 Nov 2014 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/articles/asset-catalogs-with-rubymotion/</guid><description>&lt;p&gt;Following on from my previous article &lt;a href=&#34;https://www.richt.co.uk/articles/using-launch-screens-rubymotion/&#34;&gt;Using Launch Screens with RubyMotion&lt;/a&gt; this article shows you another good reason to jump into Xcode for your RubyMotion project, this time to create &lt;a href=&#34;https://developer.apple.com/library/ios/recipes/xcode_help-image_catalog-1.0/Recipe.html&#34;&gt;Asset Catalogs&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Using Launch Screens with RubyMotion</title><link>https://www.richt.co.uk/articles/using-launch-screens-rubymotion/</link><pubDate>Wed, 05 Nov 2014 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/articles/using-launch-screens-rubymotion/</guid><description>&lt;p&gt;Maintaining multiple launch screen images for different devices has always been a pain in iOS. Thankfully since iOS8 you can now use a custom view that can automatically adapt to different screen sizes.&lt;/p&gt;</description></item><item><title>Code Your Own Multi-User Private Git Server in 5 Minutes</title><link>https://www.richt.co.uk/articles/code-your-own-multi-user-private-git-server-in-5-minutes/</link><pubDate>Fri, 30 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.richt.co.uk/articles/code-your-own-multi-user-private-git-server-in-5-minutes/</guid><description>&lt;p&gt;Following on from last weeks post about Simple Two Factor SSH Authentication this post shows you how to use the same
SSH trick to create a multi-user private git server. I believe the principles here can also be applied to mercurial
or subversion.&lt;/p&gt;</description></item></channel></rss>